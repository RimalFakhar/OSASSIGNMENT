numberOfProcesses = 5
listOfProcesses = ["p0","p1","p2","p3","p4"]
ArrivalTimes = [0,1,3,1,0]
ExecutionTimes = [5,3,10,6,8]

clock = 0

processPerClock = []

while len(listOfProcesses) != 0:

	lenghtOfArrivalTimes = len(ArrivalTimes) 

	temp = []
	temp2 = []
	for i in range(lenghtOfArrivalTimes):
		if ArrivalTimes[i] <= clock:
			temp.append(ArrivalTimes[i])
	

	minimumArrivalTime = min(temp)

	
	for j in range(lenghtOfArrivalTimes):
		
		if ArrivalTimes[j] == minimumArrivalTime:

			for p in range(ExecutionTimes[j]):
				processPerClock.append(listOfProcesses[j])

			clock = clock + ExecutionTimes[j]
			temp2.append(j)

			
	for i in sorted(temp2, reverse = True):
		del ExecutionTimes[i]
		del ArrivalTimes[i]
		del listOfProcesses[i]


	numberOfProcesses = numberOfProcesses - 1

print "processPerClock: ", processPerClock


waitingtimes = []
for i in range(len(copyOfListOfProcesses)):
	waitingtimes.append(processPerClock.index("p" + str(i)))

averageWaitingsTime = float(sum(waitingtimes))/len(copyOfListOfProcesses)

print "average waiting time: ", averageWaitingsTime

responseTimes = []
for i in range(len(copyOfArrivalTimes)):
	responseTimes.append(waitingtimes[i]-copyOfArrivalTimes[i])

averageResponseTime = float(sum(responseTimes))/len(copyOfArrivalTimes)

print "average response time: ", averageResponseTime

turnAroundTimes = []

for i in range(len(copyOfArrivalTimes)):
	turnAroundTimes.append((len(processPerClock) - processPerClock[::-1].index("p" + str(i)) - 1) - copyOfArrivalTimes[i])

averageTurnAroundTime = float(sum(turnAroundTimes))/len(copyOfArrivalTimes)

print "average turnAround time: ", averageTurnAroundTime